# TODO: Reconfigure to single buildpack step (compile + nginx + static)
steps:
  - name: 'gcr.io/cloud-builders/yarn'
    args: [ 'install' ]
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cat <<EOF > src/environments/environment.prod.ts
        export const environment = {
          production: true,
          stsServer: 'https://auth.oos.dmytrominochkin.cloud',
          serverUrl: 'https://api.oos.dmytrominochkin.cloud',
          storageUrl: 'https://storage.googleapis.com/oos-images-63325/'
        };
        EOF
  - name: 'gcr.io/cloud-builders/yarn'
    args: [ 'build:prod' ]
  # Build the container image
  - name: 'gcr.io/k8s-skaffold/pack'
    entrypoint: 'pack'
    env:
      - "TMPDIR=/builder/home/.pack"
    args:
      - build
      - gcr.io/$PROJECT_ID/oos-frontend:$COMMIT_SHA
      - --cache-image=gcr.io/$PROJECT_ID/oos-frontend:cache
      - --builder=paketobuildpacks/builder:base
      # TODO: after nginx/staticfile buildpack fix revert to using latest version
      # - --buildpack=paketo-buildpacks/nginx
      - --buildpack=docker:///gcr.io/paketo-buildpacks/nginx:0.5.3
      - --buildpack=paketo-community/staticfile
      - --path=dist/
      - --publish
  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - beta
      - run
      - deploy
      - frontend
      - --image
      - gcr.io/$PROJECT_ID/oos-frontend:$COMMIT_SHA
      - --region
      - $_REGION
      - --platform
      - managed
      - --allow-unauthenticated
      - --service-account
      - $_SERVICE_ACCOUNT
      - --cpu=1
      - --memory=128Mi
      - --max-instances=4
      - --concurrency=40
      # Disable http2 because prod will be http1.1 for now
      - --no-use-http2
  # Clean old versions except previous Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - for revision in `gcloud run revisions list --service frontend --platform managed --region $_REGION --format 'value(name)' | sort -r | tail -n +3 | paste -sd " " -`; do $(yes | gcloud run revisions delete --platform managed --region $_REGION $revision) || exit 0; done;
  ##### Update the tag #####
  # Access the SSH key from Secret Manager
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', 'cat $$SSH > /root/.ssh/id_github' ]
    volumes:
    - name: 'ssh'
      path: /root/.ssh
  # Set up git with key and domain
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      chmod 600 /root/.ssh/id_github
      cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/id_github
      EOF
      ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
    - name: 'ssh'
      path: /root/.ssh
  # Increment tag
  - name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      git config --global user.name cloudbuild
      git config --global user.email oos@cloudbuild.gserviceaccount.com
      echo "Cloning repo"
      git clone --depth 1 git@github.com:ita-social-projects/OoS-Frontend.git
      echo "Updating image tag version ..."
      cd OoS-Frontend
      CURRENT_VERSION=`git describe --abbrev=0 --tags 2>/dev/null`
      if [[ $$CURRENT_VERSION == '' ]]
      then
        CURRENT_VERSION='gcp-0.0.0'
      fi
      echo "Current Version: $$CURRENT_VERSION"
      CURRENT_VERSION_PARTS=($${CURRENT_VERSION//./ })
      VNUM1=$${CURRENT_VERSION_PARTS[0]}
      VNUM2=$${CURRENT_VERSION_PARTS[1]}
      VNUM3=$${CURRENT_VERSION_PARTS[2]}
      VNUM3=$$((VNUM3+1))
      NEW_TAG="$$VNUM1.$$VNUM2.$$VNUM3"
      echo "Updating $$CURRENT_VERSION to $$NEW_TAG"
      GIT_COMMIT=`git rev-parse HEAD`
      NEEDS_TAG=`git describe --contains $GIT_COMMIT 2>/dev/null`
      if [ -z "$$NEEDS_TAG" ]; then
        DESCRIPTION=`git log --cherry --pretty=format:'â–ª %s by %an' --max-count=1`
        git tag -a $$NEW_TAG -m $$DESCRIPTION
        echo "Tagged with $NEW_TAG"
        git push --tags
      else
        echo "Already a tag on this commit"
      fi
    volumes:
    - name: 'ssh'
      path: /root/.ssh
availableSecrets:
  secretManager:
  - versionName: $_GITHUB_DEPLOY
    env: 'SSH'
