steps:
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      curl --silent --location "https://github.com/cli/cli/releases/download/v$_GITHUB_CLI_VERSION/gh_${_GITHUB_CLI_VERSION}_linux_amd64.tar.gz" |\
        tar xz --strip-components=1 -C /ghcli
    volumes:
    - name: 'gh'
      path: /ghcli
  # Increment tag
  - name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    secretEnv: ['TOKEN']
    volumes:
    - name: 'gh'
      path: /ghcli
    env:
      - "PATH=$$PATH:/ghcli/bin"
    args:
    - '-c'
    - |
      echo "Cloning repo"
      git clone --branch $BRANCH_NAME git@github.com:ita-social-projects/OoS-Frontend.git
      cd OoS-Frontend
      CURRENT_VERSION=`git describe --tags $$(git rev-list --tags --max-count=1) 2>/dev/null`
      if [[ $$CURRENT_VERSION == '' ]]
      then
        CURRENT_VERSION='gcp-0.0.0'
      fi
      echo "Current Version: $$CURRENT_VERSION"
      CURRENT_VERSION_PARTS=($${CURRENT_VERSION//./ })
      VNUM1=$${CURRENT_VERSION_PARTS[0]}
      VNUM2=$${CURRENT_VERSION_PARTS[1]}
      VNUM3=$${CURRENT_VERSION_PARTS[2]}
      VNUM3=$$((VNUM3+1))
      NEW_TAG="$$VNUM1.$$VNUM2.$$VNUM3"
      echo "Updating $$CURRENT_VERSION to $$NEW_TAG"
      GIT_COMMIT=`git rev-parse HEAD`
      NEEDS_TAG=`git describe --contains $$GIT_COMMIT 2>/dev/null`
      if [ -z "$$NEEDS_TAG" ]; then
        RELEASE_TAG=$$NEW_TAG
      else
        RELEASE_TAG=$$CURRENT_VERSION
      fi
      gh auth login --with-token <<< $$TOKEN
      gh release create $$RELEASE_TAG --generate-notes --repo "ita-social-projects/OoS-Frontend"
availableSecrets:
  secretManager:
  - versionName: $_GITHUB_TOKEN
    env: 'TOKEN'
