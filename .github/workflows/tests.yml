name: Build and test

on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Pull the source code to GitHub workspace
        uses: actions/checkout@v2
      - name: Set up a Node environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Install Angular CLI
        run: yarn add @angular/cli
      - name: Run build
        run: yarn run build --prod
      - name: Run tests
        if: ${{ success() }}
        run: yarn test

# name: Run tests

# on:
#   push:
#     branches: [master, develop, feat/create-workflow]
#   pull_request:
#     branches: [master, develop]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [12.x]

#     steps:
#       - uses: actions/checkout@v2
#       - name: Run tests
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: yarn version
#       - run: yarn install
#       - run: yarn test